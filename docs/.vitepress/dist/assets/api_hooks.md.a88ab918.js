import{o as n,c as s,a}from"./app.fa974bcf.js";const t='{"title":"Vue Lifecycle Hooks","description":"","frontmatter":{},"headers":[{"level":2,"title":"fromHook","slug":"fromhook"},{"level":2,"title":"pipeUntil","slug":"pipeuntil"},{"level":2,"title":"untilUnmounted","slug":"untilunmounted"}],"relativePath":"api/hooks.md","lastUpdated":1615035927265}',o={},p=a('<h1 id="vue-lifecycle-hooks"><a class="header-anchor" href="#vue-lifecycle-hooks" aria-hidden="true">#</a> Vue Lifecycle Hooks</h1><blockquote><p>These are some utilities that ease interactions between Vue&#39;s lifecycle hooks and rxjs Observables</p></blockquote><h2 id="fromhook"><a class="header-anchor" href="#fromhook" aria-hidden="true">#</a> <code>fromHook</code></h2><div class="language-ts"><pre><code><span class="token punctuation">(</span>hook<span class="token operator">:</span> VueHook<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Observable<span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;</span>\n</code></pre></div><p>Creates an observable from a Vue lifecycle hook, like <code>onUpdated</code> or <code>onMounted</code>:</p><div class="language-ts"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> onUnmounted <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span><span class="token punctuation">;</span>\n\n<span class="token comment">// somewhere in code</span>\n<span class="token keyword">const</span> onUnmounted$ <span class="token operator">=</span> <span class="token function">fromHook</span><span class="token punctuation">(</span>onUnmounted<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// in Vue component&#39;s setup function</span>\n<span class="token punctuation">{</span>\n  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    onUnmounted$<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;this will be logged when onUnmounted hook is fired&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre></div><p>Note that the hook is only connected to the component that subscribes to the resulting observable:</p><div class="language-ts"><pre><code><span class="token comment">// outside of component setup function</span>\nonUnmounted$<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;this will never be logged&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> component1 <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    onUnmounted$<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;this will be logged only when component1 is unmounted&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> component2 <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    onUnmounted$<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;this will be logged only when component2 is unmounted&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre></div><h2 id="pipeuntil"><a class="header-anchor" href="#pipeuntil" aria-hidden="true">#</a> <code>pipeUntil</code></h2><div class="language-ts"><pre><code><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>hook<span class="token operator">:</span> VueHook<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> RxOperator<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span>\n</code></pre></div><p>Creates an operator that halts the observable when a Vue hook is activated.<br> Only works for the component it is called within.</p><h2 id="untilunmounted"><a class="header-anchor" href="#untilunmounted" aria-hidden="true">#</a> <code>untilUnmounted</code></h2><div class="language-ts"><pre><code><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>obs<span class="token operator">:</span> Observable<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Observable<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span>\n</code></pre></div><p>Applies <code>pipeUntil</code> to an observable, shorthand for <code>obserable.pipe(pipeUntil(onUnmounted))</code>.</p>',14);o.render=function(a,t,o,e,c,u){return n(),s("div",null,[p])};export default o;export{t as __pageData};
