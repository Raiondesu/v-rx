import{r as n,o as s,c as a,b as t,w as e,d as o}from"./app.55808820.js";const c='{"title":"useRxState","description":"","frontmatter":{},"headers":[{"level":2,"title":"Description","slug":"description"},{"level":2,"title":"Type Signature and overloads","slug":"type-signature-and-overloads"},{"level":3,"title":"State","slug":"state"},{"level":3,"title":"Reducers","slug":"reducers"},{"level":2,"title":"Basic example","slug":"basic-example"}],"relativePath":"api/use-rx-state.md","lastUpdated":1614847945930}',p={},l=t("h1",{id:"userxstate"},[t("a",{class:"header-anchor",href:"#userxstate","aria-hidden":"true"},"#"),o(" useRxState")],-1),u=t("blockquote",null,[t("p",null,"Allows to bind reducers to a reactive state and an observable.")],-1),r=t("p",null,[t("a",{href:"https://github.com/Raiondesu/vuse-rx/blob/main/src/use-rx.ts",target:"_blank",rel:"noopener noreferrer"},"Source")],-1),i=t("p",null,[t("div",{class:"table-of-contents"},[t("ul",null,[t("li",null,[t("a",{href:"#description"},"Description")]),t("li",null,[t("a",{href:"#type-signature-and-overloads"},"Type Signature and overloads"),t("ul",null,[t("li",null,[t("a",{href:"#state"},"State")]),t("li",null,[t("a",{href:"#reducers"},"Reducers")])])]),t("li",null,[t("a",{href:"#basic-example-https-github-com-raiondesu-vuse-rx-blob-main-docs-vitepress-theme-recipes-counter-vue"},"Basic example")])])])],-1),k=t("h2",{id:"description"},[t("a",{class:"header-anchor",href:"#description","aria-hidden":"true"},"#"),o(" Description")],-1),d=t("p",null,"Implements a light flux pattern using rxjs' Observables.",-1),m=t("p",null,[o("Even though state management is not the primary concern of "),t("code",null,"vuse-rx"),o(", it still allows for a basic flux-like state management with observables using "),t("code",null,"useRxState"),o(".")],-1),h=t("p",null,"This function returns 3 key parts:",-1),b=t("ul",null,[t("li",null,[o("Reactive "),t("strong",null,"state")]),t("li",null,[o("State "),t("strong",null,"reducers")]),t("li",null,[o("RXjs "),t("strong",null,"observable")])],-1),g=t("p",null,"All of them work in unison to always keep vue components in sync with the application business logic.",-1),f=t("p",null,[t("img",{src:"/vuse.svg",alt:"diagram"})],-1),v=t("p",null,[o("The big difference from other flux-like solutions is that "),t("code",null,"useRxState"),o(" doesn't care whether it's a singleton that manages the state of the whole application or just used locally in a component. Therefore, it's much more flexible for small- to mid- scale applications.")],-1),y=t("p",null,"It accepts, at minimum, an initial state and some reducers:",-1),R=t("div",{class:"language-ts"},[t("pre",null,[t("code",null,[t("span",{class:"token keyword"},"const"),o(" state "),t("span",{class:"token operator"},"="),o(),t("span",{class:"token punctuation"},"{"),o(" count"),t("span",{class:"token operator"},":"),o(),t("span",{class:"token number"},"0"),o(),t("span",{class:"token punctuation"},"}"),t("span",{class:"token punctuation"},";"),o("\n"),t("span",{class:"token keyword"},"const"),o(" reducers "),t("span",{class:"token operator"},"="),o(),t("span",{class:"token punctuation"},"{"),o("\n  "),t("span",{class:"token function-variable function"},"increment"),t("span",{class:"token operator"},":"),o(),t("span",{class:"token punctuation"},"("),t("span",{class:"token punctuation"},")"),o(),t("span",{class:"token operator"},"=>"),o(" state "),t("span",{class:"token operator"},"=>"),o(),t("span",{class:"token punctuation"},"("),t("span",{class:"token punctuation"},"{"),o(" count"),t("span",{class:"token operator"},":"),o(" state"),t("span",{class:"token punctuation"},"."),o("count "),t("span",{class:"token operator"},"+"),o(),t("span",{class:"token number"},"1"),o(),t("span",{class:"token punctuation"},"}"),t("span",{class:"token punctuation"},")"),o("\n"),t("span",{class:"token punctuation"},"}"),t("span",{class:"token punctuation"},";"),o("\n\n"),t("span",{class:"token comment"},"// Now using const destructuring:"),o("\n"),t("span",{class:"token keyword"},"const"),o(),t("span",{class:"token punctuation"},"{"),o("\n  "),t("span",{class:"token comment"},"// actions that mutate the state via reducers"),o("\n  actions"),t("span",{class:"token punctuation"},","),o("\n\n  "),t("span",{class:"token comment"},"// vue reactive state"),o("\n  state"),t("span",{class:"token punctuation"},","),o("\n\n  "),t("span",{class:"token comment"},"// state observable"),o("\n  state$"),t("span",{class:"token punctuation"},","),o("\n\n  "),t("span",{class:"token comment"},"// observables that are triggered on specific actions"),o("\n  actions$\n"),t("span",{class:"token punctuation"},"}"),o(),t("span",{class:"token operator"},"="),o(),t("span",{class:"token function"},"useRxState"),t("span",{class:"token punctuation"},"("),o("state"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},"("),o("reducers"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},"."),t("span",{class:"token function"},"subscribe"),t("span",{class:"token punctuation"},"("),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},";"),o("\n")])])],-1),S=t("p",null,"And returns a reactive state, actions, and some observables to make things easier to control.",-1),x=t("p",null,[t("code",null,"useRxState"),o(" automatically makes the state reactive for Vue, so you don't need to worry about applying "),t("code",null,"reactive"),o(" to it.")],-1),w=t("h2",{id:"type-signature-and-overloads"},[t("a",{class:"header-anchor",href:"#type-signature-and-overloads","aria-hidden":"true"},"#"),o(" Type Signature and overloads")],-1),$=t("div",{class:"language-ts"},[t("pre",null,[t("code",null,[t("span",{class:"token keyword"},"function"),o(),t("span",{class:"token operator"},"<"),t("span",{class:"token constant"},"S"),o(),t("span",{class:"token keyword"},"extends"),o(),t("span",{class:"token class-name"},[o("Record"),t("span",{class:"token operator"},"<"),t("span",{class:"token builtin"},"string"),t("span",{class:"token punctuation"},","),o(),t("span",{class:"token builtin"},"any"),t("span",{class:"token operator"},">")]),t("span",{class:"token operator"},">"),t("span",{class:"token punctuation"},"("),o("\n  initialState"),t("span",{class:"token operator"},":"),o(),t("span",{class:"token constant"},"S"),o(),t("span",{class:"token operator"},"|"),o(),t("span",{class:"token punctuation"},"("),t("span",{class:"token punctuation"},"("),t("span",{class:"token punctuation"},")"),o(),t("span",{class:"token operator"},"=>"),o(),t("span",{class:"token constant"},"S"),t("span",{class:"token punctuation"},")"),o("\n"),t("span",{class:"token punctuation"},")"),o(),t("span",{class:"token operator"},"=>"),o(),t("span",{class:"token operator"},"<"),t("span",{class:"token constant"},"R"),o(),t("span",{class:"token keyword"},"extends"),o(),t("span",{class:"token class-name"},[o("StateReducers"),t("span",{class:"token operator"},"<"),t("span",{class:"token constant"},"S"),t("span",{class:"token operator"},">")]),t("span",{class:"token operator"},">"),t("span",{class:"token punctuation"},"("),o("\n  reducers"),t("span",{class:"token operator"},":"),o(),t("span",{class:"token constant"},"R"),t("span",{class:"token punctuation"},","),o("\n  map$"),t("span",{class:"token operator"},"?"),t("span",{class:"token operator"},":"),o(),t("span",{class:"token punctuation"},"("),o("\n    state$"),t("span",{class:"token operator"},":"),o(" Observable"),t("span",{class:"token operator"},"<"),o("Readonly"),t("span",{class:"token operator"},"<"),t("span",{class:"token constant"},"S"),t("span",{class:"token operator"},">>"),t("span",{class:"token punctuation"},","),o("\n    reducers"),t("span",{class:"token operator"},":"),o(),t("span",{class:"token constant"},"R"),t("span",{class:"token punctuation"},","),o("\n    state"),t("span",{class:"token operator"},":"),o(" Readonly"),t("span",{class:"token operator"},"<"),t("span",{class:"token constant"},"S"),t("span",{class:"token operator"},">"),t("span",{class:"token punctuation"},","),o("\n    actions$"),t("span",{class:"token operator"},":"),o(" Record"),t("span",{class:"token operator"},"<"),t("span",{class:"token template-string"},[t("span",{class:"token template-punctuation string"},"`"),t("span",{class:"token string"},"on"),t("span",{class:"token interpolation"},[t("span",{class:"token interpolation-punctuation punctuation"},"${"),o("Capitalize"),t("span",{class:"token operator"},"<"),t("span",{class:"token keyword"},"keyof"),o(),t("span",{class:"token constant"},"R"),t("span",{class:"token operator"},">"),t("span",{class:"token interpolation-punctuation punctuation"},"}")]),t("span",{class:"token template-punctuation string"},"`")]),t("span",{class:"token punctuation"},","),o(" Observable"),t("span",{class:"token operator"},"<"),t("span",{class:"token constant"},"S"),t("span",{class:"token operator"},">>"),o("\n  "),t("span",{class:"token punctuation"},")"),o(),t("span",{class:"token operator"},"=>"),o(" Observable"),t("span",{class:"token operator"},"<"),o("Partial"),t("span",{class:"token operator"},"<"),t("span",{class:"token constant"},"S"),t("span",{class:"token operator"},">>"),o("\n"),t("span",{class:"token punctuation"},")"),o(),t("span",{class:"token operator"},"=>"),o(),t("span",{class:"token punctuation"},"{"),o("\n  actions"),t("span",{class:"token operator"},":"),o(" ReducerActions"),t("span",{class:"token operator"},"<"),t("span",{class:"token constant"},"R"),t("span",{class:"token operator"},">"),t("span",{class:"token punctuation"},";"),o("\n  state"),t("span",{class:"token operator"},":"),o(),t("span",{class:"token constant"},"S"),t("span",{class:"token punctuation"},";"),o("\n  state$"),t("span",{class:"token operator"},":"),o(" Observable"),t("span",{class:"token operator"},"<"),t("span",{class:"token constant"},"S"),t("span",{class:"token operator"},">"),t("span",{class:"token punctuation"},";"),o("\n  actions$"),t("span",{class:"token operator"},":"),o(" ReducerObservables"),t("span",{class:"token operator"},"<"),o("ReducerActions"),t("span",{class:"token operator"},"<"),t("span",{class:"token constant"},"R"),t("span",{class:"token operator"},">"),t("span",{class:"token punctuation"},","),o(),t("span",{class:"token constant"},"S"),t("span",{class:"token operator"},">"),t("span",{class:"token punctuation"},";"),o("\n  "),t("span",{class:"token function-variable function"},"subscribe"),t("span",{class:"token operator"},":"),o(),t("span",{class:"token punctuation"},"("),o("next"),t("span",{class:"token operator"},"?"),t("span",{class:"token punctuation"},")"),o(),t("span",{class:"token operator"},"=>"),o(),t("span",{class:"token punctuation"},"{"),o("\n    actions"),t("span",{class:"token operator"},":"),o(" ReducerActions"),t("span",{class:"token operator"},"<"),t("span",{class:"token constant"},"R"),t("span",{class:"token operator"},">"),t("span",{class:"token punctuation"},";"),o("\n    state"),t("span",{class:"token operator"},":"),o(),t("span",{class:"token constant"},"S"),t("span",{class:"token punctuation"},";"),o("\n    state$"),t("span",{class:"token operator"},":"),o(" Observable"),t("span",{class:"token operator"},"<"),t("span",{class:"token constant"},"S"),t("span",{class:"token operator"},">"),t("span",{class:"token punctuation"},";"),o("\n    actions$"),t("span",{class:"token operator"},":"),o(" ReducerObservables"),t("span",{class:"token operator"},"<"),o("ReducerActions"),t("span",{class:"token operator"},"<"),t("span",{class:"token constant"},"R"),t("span",{class:"token operator"},">"),t("span",{class:"token punctuation"},","),o(),t("span",{class:"token constant"},"S"),t("span",{class:"token operator"},">"),t("span",{class:"token punctuation"},";"),o("\n    subscription"),t("span",{class:"token operator"},":"),o(),t("span",{class:"token punctuation"},"{"),o(),t("span",{class:"token function"},"unsubscribe"),t("span",{class:"token punctuation"},"("),t("span",{class:"token punctuation"},")"),t("span",{class:"token operator"},":"),o(),t("span",{class:"token keyword"},"void"),o(),t("span",{class:"token punctuation"},"}"),t("span",{class:"token punctuation"},";"),o("\n  "),t("span",{class:"token punctuation"},"}"),t("span",{class:"token punctuation"},";"),o("\n"),t("span",{class:"token punctuation"},"}"),o("\n")])])],-1),T=t("p",null,"This function is split into two parts:",-1),A=t("ol",null,[t("li",null,"State-capturing function - determines the shape and contents of the state and returns the second part:"),t("li",null,"Reducers-capturing function - sets the reducers")],-1),j=t("h3",{id:"state"},[t("a",{class:"header-anchor",href:"#state","aria-hidden":"true"},"#"),o(),t("strong",null,"State")],-1),O=t("div",{class:"language-ts"},[t("pre",null,[t("code",null,[t("span",{class:"token operator"},"<"),t("span",{class:"token constant"},"S"),o(),t("span",{class:"token keyword"},"extends"),o(),t("span",{class:"token class-name"},[o("Record"),t("span",{class:"token operator"},"<"),t("span",{class:"token builtin"},"string"),t("span",{class:"token punctuation"},","),o(),t("span",{class:"token builtin"},"any"),t("span",{class:"token operator"},">")]),t("span",{class:"token operator"},">"),t("span",{class:"token punctuation"},"("),o("initialState"),t("span",{class:"token operator"},":"),o(),t("span",{class:"token constant"},"S"),o(),t("span",{class:"token operator"},"|"),o(),t("span",{class:"token punctuation"},"("),t("span",{class:"token punctuation"},"("),t("span",{class:"token punctuation"},")"),o(),t("span",{class:"token operator"},"=>"),o(),t("span",{class:"token constant"},"S"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},")"),o(),t("span",{class:"token operator"},"=>"),o(),t("span",{class:"token builtin"},"Function"),o("\n")])])],-1),C=t("p",null,"Accepts either a state object or a state factory function.",-1),I=t("p",null,"There's only one aspect to this function and only one purpose - to remember the initial state and infer (or set) its type.",-1),N=t("p",null,"It then returns the second function.",-1),P=t("h3",{id:"reducers"},[t("a",{class:"header-anchor",href:"#reducers","aria-hidden":"true"},"#"),o(),t("strong",null,"Reducers")],-1),_=t("div",{class:"language-ts"},[t("pre",null,[t("code",null,[t("span",{class:"token operator"},"<"),t("span",{class:"token constant"},"R"),o(),t("span",{class:"token keyword"},"extends"),o(),t("span",{class:"token class-name"},[o("StateReducers"),t("span",{class:"token operator"},"<"),t("span",{class:"token constant"},"S"),t("span",{class:"token operator"},">")]),t("span",{class:"token operator"},">"),t("span",{class:"token punctuation"},"("),o("\n  reducers"),t("span",{class:"token operator"},":"),o(),t("span",{class:"token constant"},"R"),t("span",{class:"token punctuation"},","),o("\n  map$"),t("span",{class:"token operator"},"?"),t("span",{class:"token operator"},":"),o(),t("span",{class:"token punctuation"},"("),o("\n    state$"),t("span",{class:"token operator"},":"),o(" Observable"),t("span",{class:"token operator"},"<"),o("Readonly"),t("span",{class:"token operator"},"<"),t("span",{class:"token constant"},"S"),t("span",{class:"token operator"},">>"),t("span",{class:"token punctuation"},","),o("\n    reducers"),t("span",{class:"token operator"},":"),o(),t("span",{class:"token constant"},"R"),t("span",{class:"token punctuation"},","),o("\n    state"),t("span",{class:"token operator"},":"),o(" Readonly"),t("span",{class:"token operator"},"<"),t("span",{class:"token constant"},"S"),t("span",{class:"token operator"},">"),t("span",{class:"token punctuation"},","),o("\n    actions$"),t("span",{class:"token operator"},":"),o(" Record"),t("span",{class:"token operator"},"<"),t("span",{class:"token template-string"},[t("span",{class:"token template-punctuation string"},"`"),t("span",{class:"token string"},"on"),t("span",{class:"token interpolation"},[t("span",{class:"token interpolation-punctuation punctuation"},"${"),o("Capitalize"),t("span",{class:"token operator"},"<"),o("Extract"),t("span",{class:"token operator"},"<"),t("span",{class:"token keyword"},"keyof"),o(),t("span",{class:"token constant"},"R"),t("span",{class:"token punctuation"},","),o(),t("span",{class:"token builtin"},"string"),t("span",{class:"token operator"},">>"),t("span",{class:"token interpolation-punctuation punctuation"},"}")]),t("span",{class:"token template-punctuation string"},"`")]),t("span",{class:"token punctuation"},","),o(" Observable"),t("span",{class:"token operator"},"<"),t("span",{class:"token constant"},"S"),t("span",{class:"token operator"},">>"),o("\n  "),t("span",{class:"token punctuation"},")"),o(),t("span",{class:"token operator"},"=>"),o(" Observable"),t("span",{class:"token operator"},"<"),o("Partial"),t("span",{class:"token operator"},"<"),t("span",{class:"token constant"},"S"),t("span",{class:"token operator"},">>"),o("\n"),t("span",{class:"token punctuation"},")"),o(),t("span",{class:"token operator"},"=>"),o(" SubscribableRxRes"),t("span",{class:"token operator"},"<"),o("ReducerActions"),t("span",{class:"token operator"},"<"),t("span",{class:"token constant"},"R"),t("span",{class:"token operator"},">"),t("span",{class:"token punctuation"},","),o(),t("span",{class:"token constant"},"S"),t("span",{class:"token operator"},">"),o("\n")])])],-1),q=t("p",null,"There's a lot to unpack. Let's go one parameter at-a-time.",-1),B=t("p",null,[o("For a concrete usage examples with both parameters see the "),t("a",{href:"/recipes/stopwatch.html"},[t("code",null,"stopwatch"),o(" recipe")]),o(".")],-1),D=t("h4",{id:"parameter-1-reducers"},[t("a",{class:"header-anchor",href:"#parameter-1-reducers","aria-hidden":"true"},"#"),o(" Parameter 1: "),t("code",null,"reducers")],-1),F=t("p",null,"This function's primary goal is to bind reducers to the state.",-1),V=t("p",null,[o("The reducers are passed in as a first parameter in "),t("a",{href:"https://github.com/Raiondesu/vuse-rx/blob/main/src/use-rx.ts#L31",target:"_blank",rel:"noopener noreferrer"},"the following format"),o(".")],-1),E=t("p",null,[o("Each "),t("strong",null,"reducer"),o(" must "),t("strong",null,"return"),o(" either "),t("strong",null,"a part of the state"),o(" or "),t("strong",null,"an observable"),o(" that emits a part of the state.")],-1),z=t("p",null,[o("A reducer can be either state"),t("strong",null,"ful"),o(" or state"),t("strong",null,"less"),o(":")],-1),L=t("ul",null,[t("li",null,[t("p",null,[o("A state"),t("strong",null,"ful"),o(" reducer uses a state object to compute the mutation:"),t("br"),o(" For example, an add-reducer:")]),t("div",{class:"language-ts"},[t("pre",null,[t("code",null,[t("span",{class:"token comment"},"// Reducer returns a function that accepts a state and returns the final mutation"),o("\n"),t("span",{class:"token punctuation"},"("),o("addAmount"),t("span",{class:"token punctuation"},")"),o(),t("span",{class:"token operator"},"=>"),o(),t("span",{class:"token punctuation"},"("),o("state"),t("span",{class:"token punctuation"},")"),o(),t("span",{class:"token operator"},"=>"),o(),t("span",{class:"token punctuation"},"("),t("span",{class:"token punctuation"},"{"),o(" count"),t("span",{class:"token operator"},":"),o(" state"),t("span",{class:"token punctuation"},"."),o("count "),t("span",{class:"token operator"},"+"),o(" addAmount "),t("span",{class:"token punctuation"},"}"),t("span",{class:"token punctuation"},")"),o("\n")])])])]),t("li",null,[t("p",null,[o("A state"),t("strong",null,"less"),o(" reducer only uses its initial parameters to compute the mutation:"),t("br"),o(" For example, a replace-reducer:")]),t("div",{class:"language-ts"},[t("pre",null,[t("code",null,[t("span",{class:"token comment"},"// Reducer returns the final mutation right away"),o("\n"),t("span",{class:"token punctuation"},"("),o("newValue"),t("span",{class:"token punctuation"},")"),o(),t("span",{class:"token operator"},"=>"),o(),t("span",{class:"token punctuation"},"("),t("span",{class:"token punctuation"},"{"),o(" count"),t("span",{class:"token operator"},":"),o(" newValue "),t("span",{class:"token punctuation"},"}"),t("span",{class:"token punctuation"},")"),o("\n")])])])])],-1),U=t("p",null,"The resulting mutation is then automatically merged with the state itself.",-1),X=t("h4",{id:"parameter-2-map"},[t("a",{class:"header-anchor",href:"#parameter-2-map","aria-hidden":"true"},"#"),o(" Parameter 2: "),t("code",null,"map$")],-1),G=t("p",null,[o("It's also possible to modify the resulting observable using the second parameter, "),t("code",null,"map$"),o("."),t("br"),o(" It accepts the resulting observable (fired on each action), a map of raw reducers (basically, the first parameter itself), the state, and a map of all observables that are fired on action calls:")],-1),H=t("div",{class:"language-ts"},[t("pre",null,[t("code",null,[t("span",{class:"token function"},"useRxState"),t("span",{class:"token punctuation"},"("),o("state"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},"("),o("\n  reducers"),t("span",{class:"token punctuation"},","),o("\n  "),t("span",{class:"token comment"},"// add this parameter to any useRxState call to try"),o("\n  "),t("span",{class:"token punctuation"},"("),o("state$"),t("span",{class:"token punctuation"},","),o(" reducers"),t("span",{class:"token punctuation"},","),o(" state"),t("span",{class:"token punctuation"},","),o(" actions$"),t("span",{class:"token punctuation"},")"),o(),t("span",{class:"token operator"},"=>"),o(),t("span",{class:"token punctuation"},"{"),o("\n    "),t("span",{class:"token builtin"},"console"),t("span",{class:"token punctuation"},"."),t("span",{class:"token function"},"log"),t("span",{class:"token punctuation"},"("),t("span",{class:"token string"},"'This is logged only once'"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},";"),o("\n    "),t("span",{class:"token builtin"},"console"),t("span",{class:"token punctuation"},"."),t("span",{class:"token function"},"log"),t("span",{class:"token punctuation"},"("),t("span",{class:"token string"},"'These are all reducers defined above, unchanged'"),t("span",{class:"token punctuation"},","),o(" reducers"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},";"),o("\n    "),t("span",{class:"token builtin"},"console"),t("span",{class:"token punctuation"},"."),t("span",{class:"token function"},"log"),t("span",{class:"token punctuation"},"("),t("span",{class:"token string"},"'This is an initial reactive state'"),t("span",{class:"token punctuation"},","),o(" state"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},";"),o("\n    "),t("span",{class:"token builtin"},"console"),t("span",{class:"token punctuation"},"."),t("span",{class:"token function"},"log"),t("span",{class:"token punctuation"},"("),t("span",{class:"token string"},"'This is a map of all actions to their secific observables'"),t("span",{class:"token punctuation"},","),o(" actions$"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},";"),o("\n\n    "),t("span",{class:"token comment"},"// By the way, state$ is just merged actions$,"),o("\n    "),t("span",{class:"token comment"},"// so this"),o("\n    "),t("span",{class:"token keyword"},"return"),o(" state$"),t("span",{class:"token punctuation"},"."),t("span",{class:"token function"},"pipe"),t("span",{class:"token punctuation"},"("),t("span",{class:"token function"},"tap"),t("span",{class:"token punctuation"},"("),o("state "),t("span",{class:"token operator"},"=>"),o(),t("span",{class:"token builtin"},"console"),t("span",{class:"token punctuation"},"."),t("span",{class:"token function"},"log"),t("span",{class:"token punctuation"},"("),t("span",{class:"token string"},"'this is logged on each action'"),t("span",{class:"token punctuation"},","),o(" state"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},";"),o("\n    "),t("span",{class:"token comment"},"// and this"),o("\n    "),t("span",{class:"token keyword"},"return"),o(),t("span",{class:"token function"},"merge"),t("span",{class:"token punctuation"},"("),t("span",{class:"token operator"},"..."),o("Object"),t("span",{class:"token punctuation"},"."),t("span",{class:"token function"},"values"),t("span",{class:"token punctuation"},"("),o("actions$"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},"."),t("span",{class:"token function"},"pipe"),t("span",{class:"token punctuation"},"("),t("span",{class:"token function"},"tap"),t("span",{class:"token punctuation"},"("),o("state "),t("span",{class:"token operator"},"=>"),o(),t("span",{class:"token builtin"},"console"),t("span",{class:"token punctuation"},"."),t("span",{class:"token function"},"log"),t("span",{class:"token punctuation"},"("),t("span",{class:"token string"},"'this is logged on each action'"),t("span",{class:"token punctuation"},","),o(" state"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},";"),o("\n    "),t("span",{class:"token comment"},"// are identical"),o("\n  "),t("span",{class:"token punctuation"},"}"),o("\n"),t("span",{class:"token punctuation"},")"),o("\n")])])],-1),J=t("h4",{id:"returned-value"},[t("a",{class:"header-anchor",href:"#returned-value","aria-hidden":"true"},"#"),o(" Returned value")],-1),K=t("p",null,"The function then returns a pretty complex object, with the first three properties being the main ones:",-1),M=t("ul",null,[t("li",null,[t("code",null,"state"),o(" - a plain Vue reactive state, mutable.")]),t("li",null,[t("code",null,"actions"),o(" - transformed reducers, they accept the defined parameters, but mutate the state, instead of just returning its parts.")]),t("li",null,[t("code",null,"state$"),o(" - an observable that emits a new state each time there's an update.")]),t("li",null,[t("code",null,"actions$"),o(" - a map of individual observables per each action, useful for tracking individual action calls.")]),t("li",null,[t("code",null,"subscribe"),o(" - a shorthand for calling "),t("code",null,"subscribe"),o(" on the "),t("code",null,"state$"),o(", returns the same object with rxjs "),t("a",{href:"https://rxjs-dev.firebaseapp.com/guide/subscription",target:"_blank",rel:"noopener noreferrer"},[t("code",null,"Subscription")]),o(" mixed-in.")])],-1),Q=t("h2",{id:"basic-example"},[t("a",{class:"header-anchor",href:"#basic-example","aria-hidden":"true"},"#"),o(),t("a",{href:"https://github.com/Raiondesu/vuse-rx/blob/main/docs/.vitepress/theme/recipes/counter.vue",target:"_blank",rel:"noopener noreferrer"},"Basic example")],-1),W=t("div",{class:"language-js"},[t("pre",null,[t("code",null,[t("span",{class:"token keyword"},"const"),o(),t("span",{class:"token punctuation"},"{"),o("\n  actions"),t("span",{class:"token operator"},":"),o(),t("span",{class:"token punctuation"},"{"),o("\n    increment"),t("span",{class:"token punctuation"},","),o("\n    setCount\n  "),t("span",{class:"token punctuation"},"}"),t("span",{class:"token punctuation"},","),o("\n  state"),t("span",{class:"token punctuation"},","),o("\n  state$ "),t("span",{class:"token comment"},"// state observable"),o("\n"),t("span",{class:"token punctuation"},"}"),o(),t("span",{class:"token operator"},"="),o(),t("span",{class:"token function"},"useRxState"),t("span",{class:"token punctuation"},"("),t("span",{class:"token punctuation"},"{"),o(" count"),t("span",{class:"token operator"},":"),o(),t("span",{class:"token number"},"0"),o(),t("span",{class:"token punctuation"},"}"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},"("),t("span",{class:"token punctuation"},"{"),o("\n  "),t("span",{class:"token comment"},"// stateful reducer"),o("\n  "),t("span",{class:"token function-variable function"},"increment"),t("span",{class:"token operator"},":"),o(),t("span",{class:"token punctuation"},"("),t("span",{class:"token punctuation"},")"),o(),t("span",{class:"token operator"},"=>"),o(),t("span",{class:"token parameter"},"state"),o(),t("span",{class:"token operator"},"=>"),o(),t("span",{class:"token punctuation"},"("),t("span",{class:"token punctuation"},"{"),o("\n    "),t("span",{class:"token comment"},"// automatic type inference for the state"),o("\n    count"),t("span",{class:"token operator"},":"),o(" state"),t("span",{class:"token punctuation"},"."),o("count "),t("span",{class:"token operator"},"+"),o(),t("span",{class:"token number"},"1"),o("\n  "),t("span",{class:"token punctuation"},"}"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},","),o("\n\n  "),t("span",{class:"token comment"},"// stateless reducer"),o("\n  "),t("span",{class:"token function-variable function"},"setCount"),t("span",{class:"token operator"},":"),o(),t("span",{class:"token punctuation"},"("),t("span",{class:"token parameter"},[o("count"),t("span",{class:"token operator"},":"),o(" string")]),t("span",{class:"token punctuation"},")"),o(),t("span",{class:"token operator"},"=>"),o(),t("span",{class:"token punctuation"},"("),t("span",{class:"token punctuation"},"{"),o("\n    "),t("span",{class:"token comment"},"// custom business logic"),o("\n    count"),t("span",{class:"token operator"},":"),o(),t("span",{class:"token function"},"isNaN"),t("span",{class:"token punctuation"},"("),t("span",{class:"token function"},"Number"),t("span",{class:"token punctuation"},"("),o("count"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},")"),o(),t("span",{class:"token operator"},"?"),o(),t("span",{class:"token number"},"0"),o(),t("span",{class:"token operator"},":"),o(),t("span",{class:"token function"},"Number"),t("span",{class:"token punctuation"},"("),o("count"),t("span",{class:"token punctuation"},")"),o("\n  "),t("span",{class:"token punctuation"},"}"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},","),o("\n"),t("span",{class:"token punctuation"},"}"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},";"),o("\n\n"),t("span",{class:"token comment"},'// "Activating" the actions'),o("\nstate$"),t("span",{class:"token punctuation"},"."),t("span",{class:"token function"},"subscribe"),t("span",{class:"token punctuation"},"("),t("span",{class:"token parameter"},"state"),o(),t("span",{class:"token operator"},"=>"),o(" console"),t("span",{class:"token punctuation"},"."),t("span",{class:"token function"},"log"),t("span",{class:"token punctuation"},"("),t("span",{class:"token string"},"'counter: '"),t("span",{class:"token punctuation"},","),o(" state"),t("span",{class:"token punctuation"},"."),o("count"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},";"),o("\n\n"),t("span",{class:"token comment"},"// One-way data binding from reactive state (with type convertation)"),o("\n"),t("span",{class:"token keyword"},"const"),o(" countRef "),t("span",{class:"token operator"},"="),o(),t("span",{class:"token function"},"syncRef"),t("span",{class:"token punctuation"},"("),o("state"),t("span",{class:"token punctuation"},","),o(),t("span",{class:"token string"},"'count'"),t("span",{class:"token punctuation"},","),o(" String"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},","),o("\n")])])],-1),Y=t("div",{class:"language-vue"},[t("pre",null,[t("code",null,[t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),o("template")]),t("span",{class:"token punctuation"},">")]),o("\n  "),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),o("button")]),o(),t("span",{class:"token attr-name"},"@click"),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),o("increment"),t("span",{class:"token punctuation"},'"')]),t("span",{class:"token punctuation"},">")]),o("increment to {{ state.count + 1 }}"),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"</"),o("button")]),t("span",{class:"token punctuation"},">")]),o("\n  "),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),o("br")]),t("span",{class:"token punctuation"},">")]),o("\n  "),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),o("input")]),o(),t("span",{class:"token attr-name"},"v-model"),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),o("countRef"),t("span",{class:"token punctuation"},'"')]),t("span",{class:"token punctuation"},"/>")]),o("\n  "),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),o("button")]),o(),t("span",{class:"token attr-name"},"@click"),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),o("setCount(countRef)"),t("span",{class:"token punctuation"},'"')]),t("span",{class:"token punctuation"},">")]),o("set count to {{ countRef }}"),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"</"),o("button")]),t("span",{class:"token punctuation"},">")]),o("\n"),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"</"),o("template")]),t("span",{class:"token punctuation"},">")]),o("\n")])])],-1);p.render=function(o,c,p,Z,nn,sn){const an=n("CounterDemo"),tn=n("ClientOnly");return s(),a("div",null,[l,u,r,i,k,d,m,h,b,g,f,v,y,R,S,x,w,$,T,A,j,O,C,I,N,P,_,q,B,D,F,V,E,z,L,U,X,G,H,J,K,M,Q,t(tn,null,{default:e((()=>[t(an,{simple:""})])),_:1}),W,Y])};export default p;export{c as __pageData};
