import{r as n,o as s,c as a,b as t,w as o,d as e}from"./app.76cba06b.js";const c='{"title":"useRxState","description":"","frontmatter":{},"headers":[{"level":2,"title":"Description","slug":"description"},{"level":3,"title":"Options and fine-tuning","slug":"options-and-fine-tuning"},{"level":2,"title":"Type Signature and overloads","slug":"type-signature-and-overloads"},{"level":3,"title":"1. State","slug":"_1-state"},{"level":3,"title":"2. Reducers","slug":"_2-reducers"},{"level":2,"title":"Basic example","slug":"basic-example"}],"relativePath":"api/use-rx-state.md","lastUpdated":1615814097020}',p={},l=t("h1",{id:"userxstate"},[t("a",{class:"header-anchor",href:"#userxstate","aria-hidden":"true"},"#"),e(" useRxState")],-1),u=t("blockquote",null,[t("p",null,"Allows to bind reducers to a reactive state and observables.")],-1),i=t("p",null,[t("a",{href:"https://github.com/Raiondesu/vuse-rx/blob/main/src/use-rx.ts",target:"_blank",rel:"noopener noreferrer"},"Source")],-1),r=t("p",null,[t("div",{class:"table-of-contents"},[t("ul",null,[t("li",null,[t("a",{href:"#description"},"Description"),t("ul",null,[t("li",null,[t("a",{href:"#options-and-fine-tuning"},"Options and fine-tuning")])])]),t("li",null,[t("a",{href:"#type-signature-and-overloads"},"Type Signature and overloads"),t("ul",null,[t("li",null,[t("a",{href:"#_1-state"},"1. State")]),t("li",null,[t("a",{href:"#_2-reducers"},"2. Reducers")])])]),t("li",null,[t("a",{href:"#basic-example-https-github-com-raiondesu-vuse-rx-blob-main-docs-vitepress-theme-recipes-counter-vue"},"Basic example")])])])],-1),k=t("h2",{id:"description"},[t("a",{class:"header-anchor",href:"#description","aria-hidden":"true"},"#"),e(" Description")],-1),d=t("p",null,"Implements a light flux pattern using rxjs' Observables.",-1),m=t("p",null,[e("Even though state management is not the primary concern of "),t("code",null,"vuse-rx"),e(", it still allows for a basic flux-like state management with observables using "),t("code",null,"useRxState"),e(".")],-1),h=t("p",null,"This function returns 3 key parts:",-1),f=t("ul",null,[t("li",null,[e("Reactive "),t("strong",null,"state")]),t("li",null,[e("State "),t("strong",null,"reducers")]),t("li",null,[e("RXjs "),t("strong",null,"observable")])],-1),b=t("p",null,"All of them work in unison to always keep vue components in sync with the application business logic.",-1),g=t("p",null,[t("img",{src:"/vuse.svg",alt:"diagram"})],-1),v=t("p",null,[e("The big difference from other flux-like solutions is that "),t("code",null,"useRxState"),e(" doesn't care whether it's a singleton that manages the state of the whole application or just used locally in a component. Therefore, it's much more flexible for small- to mid- scale applications.")],-1),y=t("p",null,"It accepts, at minimum, an initial state and some reducers:",-1),w=t("div",{class:"language-ts"},[t("pre",null,[t("code",null,[t("span",{class:"token keyword"},"const"),e(" state "),t("span",{class:"token operator"},"="),e(),t("span",{class:"token punctuation"},"{"),e(" count"),t("span",{class:"token operator"},":"),e(),t("span",{class:"token number"},"0"),e(),t("span",{class:"token punctuation"},"}"),t("span",{class:"token punctuation"},";"),e("\n"),t("span",{class:"token keyword"},"const"),e(" reducers "),t("span",{class:"token operator"},"="),e(),t("span",{class:"token punctuation"},"{"),e("\n  "),t("span",{class:"token function-variable function"},"increment"),t("span",{class:"token operator"},":"),e(),t("span",{class:"token punctuation"},"("),t("span",{class:"token punctuation"},")"),e(),t("span",{class:"token operator"},"=>"),e(" state "),t("span",{class:"token operator"},"=>"),e(),t("span",{class:"token punctuation"},"("),t("span",{class:"token punctuation"},"{"),e(" count"),t("span",{class:"token operator"},":"),e(" state"),t("span",{class:"token punctuation"},"."),e("count "),t("span",{class:"token operator"},"+"),e(),t("span",{class:"token number"},"1"),e(),t("span",{class:"token punctuation"},"}"),t("span",{class:"token punctuation"},")"),e("\n"),t("span",{class:"token punctuation"},"}"),t("span",{class:"token punctuation"},";"),e("\n\n"),t("span",{class:"token comment"},"// Now using const destructuring:"),e("\n"),t("span",{class:"token keyword"},"const"),e(),t("span",{class:"token punctuation"},"{"),e("\n  "),t("span",{class:"token comment"},"// actions that mutate the state via reducers"),e("\n  actions"),t("span",{class:"token punctuation"},","),e("\n\n  "),t("span",{class:"token comment"},"// vue reactive state"),e("\n  state"),t("span",{class:"token punctuation"},","),e("\n\n  "),t("span",{class:"token comment"},"// state observable"),e("\n  state$"),t("span",{class:"token punctuation"},","),e("\n\n  "),t("span",{class:"token comment"},"// observables that are triggered on specific actions"),e("\n  actions$\n"),t("span",{class:"token punctuation"},"}"),e(),t("span",{class:"token operator"},"="),e(),t("span",{class:"token function"},"useRxState"),t("span",{class:"token punctuation"},"("),e("state"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},"("),e("reducers"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},"."),t("span",{class:"token function"},"subscribe"),t("span",{class:"token punctuation"},"("),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},";"),e("\n")])])],-1),x=t("p",null,"And returns a reactive state, actions, and some observables to make things easier to control.",-1),R=t("p",null,[t("code",null,"useRxState"),e(" automatically makes the state reactive for Vue, so you don't need to worry about applying "),t("code",null,"reactive"),e(" to it.")],-1),S=t("h3",{id:"options-and-fine-tuning"},[t("a",{class:"header-anchor",href:"#options-and-fine-tuning","aria-hidden":"true"},"#"),e(" Options and fine-tuning")],-1),$=t("p",null,[t("code",null,"useRxState"),e(" allows to change some of its behaviour via the optional "),t("code",null,"options"),e(" parameter in the first function.")],-1),O=t("p",null,"Via options you can change how new mutations are applied to the state:",-1),A=t("div",{class:"language-ts"},[t("pre",null,[t("code",null,[t("span",{class:"token keyword"},"import"),e(),t("span",{class:"token punctuation"},"{"),e("\n  useRxState"),t("span",{class:"token punctuation"},","),e("\n  "),t("span",{class:"token comment"},"// this is the default mutation merge strategy"),e("\n  deepMergeKeys"),t("span",{class:"token punctuation"},","),e("\n  "),t("span",{class:"token comment"},"// fast checker of whether we can mutate the state deeper"),e("\n  canMergeDeep\n"),t("span",{class:"token punctuation"},"}"),e(),t("span",{class:"token keyword"},"from"),e(),t("span",{class:"token string"},"'vuse-rx'"),t("span",{class:"token punctuation"},";"),e("\n\n"),t("span",{class:"token function"},"useRxState"),t("span",{class:"token punctuation"},"("),e("initialState"),t("span",{class:"token punctuation"},","),e(),t("span",{class:"token punctuation"},"{"),e("\n  mutationStrategy"),t("span",{class:"token operator"},":"),e(),t("span",{class:"token punctuation"},"("),e("\n    "),t("span",{class:"token comment"},"// A full base state to mutate"),e("\n    state"),t("span",{class:"token punctuation"},","),e("\n    "),t("span",{class:"token comment"},"// Current mutation strategy (this exact function)"),e("\n    mutate\n  "),t("span",{class:"token punctuation"},")"),e(),t("span",{class:"token operator"},"=>"),e(),t("span",{class:"token punctuation"},"("),e("\n    "),t("span",{class:"token comment"},"// Mutation to apply"),e("\n    mutation\n  "),t("span",{class:"token punctuation"},")"),e(),t("span",{class:"token operator"},"=>"),e(),t("span",{class:"token punctuation"},"{"),e("\n    "),t("span",{class:"token comment"},"// Let's say, we also need to apply our mutations to symbols:"),e("\n    "),t("span",{class:"token keyword"},"for"),e(),t("span",{class:"token punctuation"},"("),t("span",{class:"token keyword"},"const"),e(" key "),t("span",{class:"token keyword"},"of"),e(" Object"),t("span",{class:"token punctuation"},"."),t("span",{class:"token function"},"getOwnPropertySymbols"),t("span",{class:"token punctuation"},"("),e("mutation"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},")"),e(),t("span",{class:"token punctuation"},"{"),e("\n      "),t("span",{class:"token comment"},"// Check if we can go deeper"),e("\n      state"),t("span",{class:"token punctuation"},"["),e("key"),t("span",{class:"token punctuation"},"]"),e(),t("span",{class:"token operator"},"="),e(),t("span",{class:"token function"},"canMergeDeep"),t("span",{class:"token punctuation"},"("),e("state"),t("span",{class:"token punctuation"},","),e(" mutation"),t("span",{class:"token punctuation"},","),e(" key"),t("span",{class:"token punctuation"},")"),e("\n        "),t("span",{class:"token comment"},"// If yes - mutate the state further using our function"),e("\n        "),t("span",{class:"token operator"},"?"),e(),t("span",{class:"token function"},"mutate"),t("span",{class:"token punctuation"},"("),e("state"),t("span",{class:"token punctuation"},"["),e("key"),t("span",{class:"token punctuation"},"]"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},"("),e("mutation"),t("span",{class:"token punctuation"},"["),e("key"),t("span",{class:"token punctuation"},"]"),t("span",{class:"token punctuation"},")"),e("\n        "),t("span",{class:"token comment"},"// if no - just assign the value of our mutation"),e("\n        "),t("span",{class:"token operator"},":"),e(" mutation"),t("span",{class:"token punctuation"},"["),e("key"),t("span",{class:"token punctuation"},"]"),t("span",{class:"token punctuation"},";"),e("\n    "),t("span",{class:"token punctuation"},"}"),e("\n\n    "),t("span",{class:"token comment"},"// Apply the default strategy once we're done"),e("\n    "),t("span",{class:"token keyword"},"return"),e(),t("span",{class:"token function"},"deepMergeKeys"),t("span",{class:"token punctuation"},"("),e("state"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},"("),e("mutation"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},";"),e("\n    "),t("span",{class:"token comment"},"// or..."),e("\n\n    "),t("span",{class:"token comment"},"// if we need to restrict our mutations to symbols only"),e("\n    "),t("span",{class:"token comment"},"// we can just return the state"),e("\n    "),t("span",{class:"token comment"},"// without applying the default strategy"),e("\n    "),t("span",{class:"token keyword"},"return"),e(" state"),t("span",{class:"token punctuation"},";"),e("\n  "),t("span",{class:"token punctuation"},"}"),e("\n"),t("span",{class:"token punctuation"},"}"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},";"),e("\n")])])],-1),T=t("h2",{id:"type-signature-and-overloads"},[t("a",{class:"header-anchor",href:"#type-signature-and-overloads","aria-hidden":"true"},"#"),e(" Type Signature and overloads")],-1),j=t("div",{class:"language-ts"},[t("pre",null,[t("code",null,[t("span",{class:"token keyword"},"function"),e(),t("span",{class:"token operator"},"<"),t("span",{class:"token constant"},"S"),e(),t("span",{class:"token keyword"},"extends"),e(),t("span",{class:"token class-name"},[e("Record"),t("span",{class:"token operator"},"<"),t("span",{class:"token builtin"},"string"),t("span",{class:"token punctuation"},","),e(),t("span",{class:"token builtin"},"any"),t("span",{class:"token operator"},">")]),t("span",{class:"token operator"},">"),t("span",{class:"token punctuation"},"("),e("\n  initialState"),t("span",{class:"token operator"},":"),e(),t("span",{class:"token constant"},"S"),e(),t("span",{class:"token operator"},"|"),e(),t("span",{class:"token punctuation"},"("),t("span",{class:"token punctuation"},"("),t("span",{class:"token punctuation"},")"),e(),t("span",{class:"token operator"},"=>"),e(),t("span",{class:"token constant"},"S"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},","),e("\n  options"),t("span",{class:"token operator"},"?"),t("span",{class:"token operator"},":"),e(" RxStateOptions\n"),t("span",{class:"token punctuation"},")"),e(),t("span",{class:"token operator"},"=>"),e(),t("span",{class:"token operator"},"<"),t("span",{class:"token constant"},"R"),e(),t("span",{class:"token keyword"},"extends"),e(),t("span",{class:"token class-name"},[e("StateReducers"),t("span",{class:"token operator"},"<"),t("span",{class:"token constant"},"S"),t("span",{class:"token operator"},">")]),t("span",{class:"token operator"},">"),t("span",{class:"token punctuation"},"("),e("\n  reducers"),t("span",{class:"token operator"},":"),e(),t("span",{class:"token constant"},"R"),t("span",{class:"token punctuation"},","),e("\n  map$"),t("span",{class:"token operator"},"?"),t("span",{class:"token operator"},":"),e(),t("span",{class:"token punctuation"},"("),e("\n    state$"),t("span",{class:"token operator"},":"),e(" Observable"),t("span",{class:"token operator"},"<"),e("Readonly"),t("span",{class:"token operator"},"<"),t("span",{class:"token constant"},"S"),t("span",{class:"token operator"},">>"),t("span",{class:"token punctuation"},","),e("\n    reducers"),t("span",{class:"token operator"},":"),e(),t("span",{class:"token constant"},"R"),t("span",{class:"token punctuation"},","),e("\n    state"),t("span",{class:"token operator"},":"),e(" Readonly"),t("span",{class:"token operator"},"<"),t("span",{class:"token constant"},"S"),t("span",{class:"token operator"},">"),t("span",{class:"token punctuation"},","),e("\n    actions$"),t("span",{class:"token operator"},":"),e(" Record"),t("span",{class:"token operator"},"<"),t("span",{class:"token template-string"},[t("span",{class:"token template-punctuation string"},"`"),t("span",{class:"token interpolation"},[t("span",{class:"token interpolation-punctuation punctuation"},"${"),t("span",{class:"token keyword"},"keyof"),e(),t("span",{class:"token constant"},"R"),t("span",{class:"token interpolation-punctuation punctuation"},"}")]),t("span",{class:"token string"},"$"),t("span",{class:"token template-punctuation string"},"`")]),t("span",{class:"token punctuation"},","),e(" Observable"),t("span",{class:"token operator"},"<"),t("span",{class:"token constant"},"S"),t("span",{class:"token operator"},">>"),e("\n  "),t("span",{class:"token punctuation"},")"),e(),t("span",{class:"token operator"},"=>"),e(" Observable"),t("span",{class:"token operator"},"<"),e("Partial"),t("span",{class:"token operator"},"<"),t("span",{class:"token constant"},"S"),t("span",{class:"token operator"},">>"),e("\n"),t("span",{class:"token punctuation"},")"),e(),t("span",{class:"token operator"},"=>"),e(),t("span",{class:"token punctuation"},"{"),e("\n  actions"),t("span",{class:"token operator"},":"),e(" ReducerActions"),t("span",{class:"token operator"},"<"),t("span",{class:"token constant"},"R"),t("span",{class:"token operator"},">"),t("span",{class:"token punctuation"},";"),e("\n  state"),t("span",{class:"token operator"},":"),e(),t("span",{class:"token constant"},"S"),t("span",{class:"token punctuation"},";"),e("\n  state$"),t("span",{class:"token operator"},":"),e(" Observable"),t("span",{class:"token operator"},"<"),t("span",{class:"token constant"},"S"),t("span",{class:"token operator"},">"),t("span",{class:"token punctuation"},";"),e("\n  actions$"),t("span",{class:"token operator"},":"),e(" ReducerObservables"),t("span",{class:"token operator"},"<"),e("ReducerActions"),t("span",{class:"token operator"},"<"),t("span",{class:"token constant"},"R"),t("span",{class:"token operator"},">"),t("span",{class:"token punctuation"},","),e(),t("span",{class:"token constant"},"S"),t("span",{class:"token operator"},">"),t("span",{class:"token punctuation"},";"),e("\n  "),t("span",{class:"token function-variable function"},"subscribe"),t("span",{class:"token operator"},":"),e(),t("span",{class:"token punctuation"},"("),e("next"),t("span",{class:"token operator"},"?"),t("span",{class:"token punctuation"},")"),e(),t("span",{class:"token operator"},"=>"),e(),t("span",{class:"token punctuation"},"{"),e("\n    actions"),t("span",{class:"token operator"},":"),e(" ReducerActions"),t("span",{class:"token operator"},"<"),t("span",{class:"token constant"},"R"),t("span",{class:"token operator"},">"),t("span",{class:"token punctuation"},";"),e("\n    state"),t("span",{class:"token operator"},":"),e(),t("span",{class:"token constant"},"S"),t("span",{class:"token punctuation"},";"),e("\n    state$"),t("span",{class:"token operator"},":"),e(" Observable"),t("span",{class:"token operator"},"<"),t("span",{class:"token constant"},"S"),t("span",{class:"token operator"},">"),t("span",{class:"token punctuation"},";"),e("\n    actions$"),t("span",{class:"token operator"},":"),e(" ReducerObservables"),t("span",{class:"token operator"},"<"),e("ReducerActions"),t("span",{class:"token operator"},"<"),t("span",{class:"token constant"},"R"),t("span",{class:"token operator"},">"),t("span",{class:"token punctuation"},","),e(),t("span",{class:"token constant"},"S"),t("span",{class:"token operator"},">"),t("span",{class:"token punctuation"},";"),e("\n    subscription"),t("span",{class:"token operator"},":"),e(),t("span",{class:"token punctuation"},"{"),e(),t("span",{class:"token function"},"unsubscribe"),t("span",{class:"token punctuation"},"("),t("span",{class:"token punctuation"},")"),t("span",{class:"token operator"},":"),e(),t("span",{class:"token keyword"},"void"),e(),t("span",{class:"token punctuation"},"}"),t("span",{class:"token punctuation"},";"),e("\n  "),t("span",{class:"token punctuation"},"}"),t("span",{class:"token punctuation"},";"),e("\n"),t("span",{class:"token punctuation"},"}"),e("\n")])])],-1),_=t("p",null,"This function is split into two parts:",-1),V=t("ol",null,[t("li",null,"State-capturing function - determines the shape and contents of the state and returns the second part:"),t("li",null,"Reducers-capturing function - sets the reducers")],-1),C=t("h3",{id:"_1-state"},[t("a",{class:"header-anchor",href:"#_1-state","aria-hidden":"true"},"#"),e(" 1. "),t("strong",null,"State")],-1),I=t("div",{class:"language-ts"},[t("pre",null,[t("code",null,[t("span",{class:"token keyword"},"function"),e(),t("span",{class:"token operator"},"<"),t("span",{class:"token constant"},"S"),e(),t("span",{class:"token keyword"},"extends"),e(),t("span",{class:"token class-name"},[e("Record"),t("span",{class:"token operator"},"<"),t("span",{class:"token builtin"},"string"),t("span",{class:"token punctuation"},","),e(),t("span",{class:"token builtin"},"any"),t("span",{class:"token operator"},">")]),t("span",{class:"token operator"},">"),t("span",{class:"token punctuation"},"("),e("\n  initialState"),t("span",{class:"token operator"},":"),e(),t("span",{class:"token constant"},"S"),e(),t("span",{class:"token operator"},"|"),e(),t("span",{class:"token punctuation"},"("),t("span",{class:"token punctuation"},"("),t("span",{class:"token punctuation"},")"),e(),t("span",{class:"token operator"},"=>"),e(),t("span",{class:"token constant"},"S"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},","),e("\n  options"),t("span",{class:"token operator"},"?"),t("span",{class:"token operator"},":"),e(" RxStateOptions\n"),t("span",{class:"token punctuation"},")"),t("span",{class:"token operator"},":"),e(),t("span",{class:"token builtin"},"Function"),e("\n")])])],-1),D=t("p",null,[e("Accepts either a state object or a state factory function and an optional options object."),t("br"),e(" It remembers the state, applies the options, and then returns the second function.")],-1),M=t("h3",{id:"_2-reducers"},[t("a",{class:"header-anchor",href:"#_2-reducers","aria-hidden":"true"},"#"),e(" 2. "),t("strong",null,"Reducers")],-1),P=t("div",{class:"language-ts"},[t("pre",null,[t("code",null,[t("span",{class:"token keyword"},"function"),e(),t("span",{class:"token operator"},"<"),t("span",{class:"token constant"},"R"),e(),t("span",{class:"token keyword"},"extends"),e(),t("span",{class:"token class-name"},[e("StateReducers"),t("span",{class:"token operator"},"<"),t("span",{class:"token constant"},"S"),t("span",{class:"token operator"},">")]),t("span",{class:"token operator"},">"),t("span",{class:"token punctuation"},"("),e("\n  reducers"),t("span",{class:"token operator"},":"),e(),t("span",{class:"token constant"},"R"),t("span",{class:"token punctuation"},","),e("\n  map$"),t("span",{class:"token operator"},"?"),t("span",{class:"token operator"},":"),e(),t("span",{class:"token punctuation"},"("),e("\n    state$"),t("span",{class:"token operator"},":"),e(" Observable"),t("span",{class:"token operator"},"<"),e("Readonly"),t("span",{class:"token operator"},"<"),t("span",{class:"token constant"},"S"),t("span",{class:"token operator"},">>"),t("span",{class:"token punctuation"},","),e("\n    reducers"),t("span",{class:"token operator"},":"),e(),t("span",{class:"token constant"},"R"),t("span",{class:"token punctuation"},","),e("\n    state"),t("span",{class:"token operator"},":"),e(" Readonly"),t("span",{class:"token operator"},"<"),t("span",{class:"token constant"},"S"),t("span",{class:"token operator"},">"),t("span",{class:"token punctuation"},","),e("\n    actions$"),t("span",{class:"token operator"},":"),e(" Record"),t("span",{class:"token operator"},"<"),t("span",{class:"token template-string"},[t("span",{class:"token template-punctuation string"},"`"),t("span",{class:"token interpolation"},[t("span",{class:"token interpolation-punctuation punctuation"},"${"),t("span",{class:"token keyword"},"keyof"),e(),t("span",{class:"token constant"},"R"),t("span",{class:"token interpolation-punctuation punctuation"},"}")]),t("span",{class:"token string"},"$"),t("span",{class:"token template-punctuation string"},"`")]),t("span",{class:"token punctuation"},","),e(" Observable"),t("span",{class:"token operator"},"<"),t("span",{class:"token constant"},"S"),t("span",{class:"token operator"},">>"),e("\n  "),t("span",{class:"token punctuation"},")"),e(),t("span",{class:"token operator"},"=>"),e(" Observable"),t("span",{class:"token operator"},"<"),e("Partial"),t("span",{class:"token operator"},"<"),t("span",{class:"token constant"},"S"),t("span",{class:"token operator"},">>"),e("\n"),t("span",{class:"token punctuation"},")"),e(),t("span",{class:"token operator"},"=>"),e(" SubscribableRxRes"),t("span",{class:"token operator"},"<"),e("ReducerActions"),t("span",{class:"token operator"},"<"),t("span",{class:"token constant"},"R"),t("span",{class:"token operator"},">"),t("span",{class:"token punctuation"},","),e(),t("span",{class:"token constant"},"S"),t("span",{class:"token operator"},">"),e("\n")])])],-1),L=t("p",null,"There's a lot to unpack. Let's go one parameter at-a-time.",-1),N=t("p",null,[e("For concrete usage examples with both parameters see the "),t("a",{href:"/recipes/stopwatch.html"},[t("code",null,"stopwatch"),e(" recipe")]),e(".")],-1),q=t("h4",{id:"parameter-1-reducers"},[t("a",{class:"header-anchor",href:"#parameter-1-reducers","aria-hidden":"true"},"#"),e(" Parameter 1: "),t("code",null,"reducers")],-1),B=t("p",null,"This function's primary goal is to bind reducers to the state.",-1),F=t("p",null,[e("The reducers are passed in as a first parameter in "),t("a",{href:"https://github.com/Raiondesu/vuse-rx/blob/main/src/use-rx.ts#L236",target:"_blank",rel:"noopener noreferrer"},"the following format"),e(". Each "),t("strong",null,"reducer"),e(" must "),t("strong",null,"return"),e(" either "),t("strong",null,"a part of the state"),e(" or "),t("strong",null,"an observable"),e(" that emits a part of the state.")],-1),E=t("p",null,[e("A reducer can be either state"),t("strong",null,"ful"),e(" or state"),t("strong",null,"less"),e(":")],-1),K=t("ul",null,[t("li",null,[t("p",null,[e("A state"),t("strong",null,"ful"),e(" reducer uses a state object to compute the mutation:"),t("br"),e(" For example, an add-reducer:")]),t("div",{class:"language-ts"},[t("pre",null,[t("code",null,[t("span",{class:"token comment"},"// Reducer returns a function that accepts a state and a mutation context"),e("\n"),t("span",{class:"token comment"},"// and returns the final mutation"),e("\n"),t("span",{class:"token punctuation"},"("),e("addAmount"),t("span",{class:"token punctuation"},")"),e(),t("span",{class:"token operator"},"=>"),e(),t("span",{class:"token punctuation"},"("),e("state"),t("span",{class:"token punctuation"},","),e(" mutation"),t("span",{class:"token punctuation"},")"),e(),t("span",{class:"token operator"},"=>"),e(),t("span",{class:"token punctuation"},"("),t("span",{class:"token punctuation"},"{"),e(" count"),t("span",{class:"token operator"},":"),e(" state"),t("span",{class:"token punctuation"},"."),e("count "),t("span",{class:"token operator"},"+"),e(" addAmount "),t("span",{class:"token punctuation"},"}"),t("span",{class:"token punctuation"},")"),e("\n")])])])]),t("li",null,[t("p",null,[e("A state"),t("strong",null,"less"),e(" reducer only uses its initial parameters to compute the mutation:"),t("br"),e(" For example, a replace-reducer:")]),t("div",{class:"language-ts"},[t("pre",null,[t("code",null,[t("span",{class:"token comment"},"// Reducer returns the final mutation right away"),e("\n"),t("span",{class:"token punctuation"},"("),e("newValue"),t("span",{class:"token punctuation"},")"),e(),t("span",{class:"token operator"},"=>"),e(),t("span",{class:"token punctuation"},"("),t("span",{class:"token punctuation"},"{"),e(" count"),t("span",{class:"token operator"},":"),e(" newValue "),t("span",{class:"token punctuation"},"}"),t("span",{class:"token punctuation"},")"),e("\n")])])])])],-1),z=t("p",null,"The resulting mutation is then automatically merged with the state itself.",-1),J=t("p",null,"Let's see a complete example:",-1),U=t("div",{class:"language-ts"},[t("pre",null,[t("code",null,[t("span",{class:"token function"},"useRxState"),t("span",{class:"token punctuation"},"("),t("span",{class:"token punctuation"},"{"),e(" count"),t("span",{class:"token operator"},":"),e(),t("span",{class:"token number"},"0"),e(),t("span",{class:"token punctuation"},"}"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},"("),t("span",{class:"token punctuation"},"{"),e("\n  "),t("span",{class:"token comment"},"// stateful"),e("\n  "),t("span",{class:"token function-variable function"},"add"),t("span",{class:"token operator"},":"),e(),t("span",{class:"token punctuation"},"("),e("addAmount"),t("span",{class:"token punctuation"},")"),e(),t("span",{class:"token operator"},"=>"),e(),t("span",{class:"token punctuation"},"("),e("state"),t("span",{class:"token punctuation"},","),e(" mutation"),t("span",{class:"token punctuation"},")"),e(),t("span",{class:"token operator"},"=>"),e(),t("span",{class:"token punctuation"},"("),t("span",{class:"token punctuation"},"{"),e(" count"),t("span",{class:"token operator"},":"),e(" state"),t("span",{class:"token punctuation"},"."),e("count "),t("span",{class:"token operator"},"+"),e(" addAmount "),t("span",{class:"token punctuation"},"}"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},","),e("\n\n  "),t("span",{class:"token comment"},"// stateless"),e("\n  "),t("span",{class:"token function-variable function"},"set"),t("span",{class:"token operator"},":"),e(),t("span",{class:"token punctuation"},"("),e("newValue"),t("span",{class:"token punctuation"},")"),e(),t("span",{class:"token operator"},"=>"),e(),t("span",{class:"token punctuation"},"("),t("span",{class:"token punctuation"},"{"),e(" count"),t("span",{class:"token operator"},":"),e(" newValue "),t("span",{class:"token punctuation"},"}"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},","),e("\n"),t("span",{class:"token punctuation"},"}"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},"."),t("span",{class:"token function"},"subscribe"),t("span",{class:"token punctuation"},"("),t("span",{class:"token punctuation"},")"),e("\n")])])],-1),W=t("p",null,[e("It's also possible to inform observables about errors or make them complete from within the reducers. The "),t("code",null,"mutation"),e(" context parameter is used for this."),t("br"),t("code",null,"mutation"),e(" is optional, however, so it is recommended to use the "),t("a",{href:"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Operators/Optional_chaining",target:"_blank",rel:"noopener noreferrer"},[e("optional chaining ("),t("code",null,"?."),e(") operator")]),e(" when using it.")],-1),X=t("p",null,[e("Let's rewrite our "),t("code",null,"add"),e(" reducer with this in mind:")],-1),G=t("div",{class:"language-ts"},[t("pre",null,[t("code",null,[t("span",{class:"token keyword"},"const"),e(" maximumValue "),t("span",{class:"token operator"},"="),e(),t("span",{class:"token number"},"10"),t("span",{class:"token punctuation"},";"),e("\n\n"),t("span",{class:"token keyword"},"const"),e(),t("span",{class:"token punctuation"},"{"),e(" actions"),t("span",{class:"token punctuation"},","),e(" state "),t("span",{class:"token punctuation"},"}"),e(),t("span",{class:"token operator"},"="),e(),t("span",{class:"token function"},"useRxState"),t("span",{class:"token punctuation"},"("),t("span",{class:"token punctuation"},"{"),e(" count"),t("span",{class:"token operator"},":"),e(),t("span",{class:"token number"},"0"),e(),t("span",{class:"token punctuation"},"}"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},"("),t("span",{class:"token punctuation"},"{"),e("\n  "),t("span",{class:"token function-variable function"},"add"),t("span",{class:"token operator"},":"),e(),t("span",{class:"token punctuation"},"("),e("addAmount"),t("span",{class:"token punctuation"},")"),e(),t("span",{class:"token operator"},"=>"),e(),t("span",{class:"token punctuation"},"("),e("state"),t("span",{class:"token punctuation"},","),e(" mutation"),t("span",{class:"token punctuation"},")"),e(),t("span",{class:"token operator"},"=>"),e(),t("span",{class:"token punctuation"},"{"),e("\n    "),t("span",{class:"token keyword"},"if"),e(),t("span",{class:"token punctuation"},"("),e("addAmount "),t("span",{class:"token operator"},"<"),e(),t("span",{class:"token number"},"0"),t("span",{class:"token punctuation"},")"),e(),t("span",{class:"token punctuation"},"{"),e("\n      "),t("span",{class:"token comment"},"// Raise a mutation error"),e("\n      mutation"),t("span",{class:"token operator"},"?."),t("span",{class:"token function"},"error"),t("span",{class:"token punctuation"},"("),t("span",{class:"token string"},"'add amount cannot be negative!'"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},";"),e("\n\n      "),t("span",{class:"token comment"},"// Signify that no changes need to be made"),e("\n      "),t("span",{class:"token keyword"},"return"),e(),t("span",{class:"token punctuation"},"{"),t("span",{class:"token punctuation"},"}"),t("span",{class:"token punctuation"},";"),e("\n    "),t("span",{class:"token punctuation"},"}"),e("\n\n    "),t("span",{class:"token keyword"},"const"),e(" newValue "),t("span",{class:"token operator"},"="),e(" state"),t("span",{class:"token punctuation"},"."),e("count "),t("span",{class:"token operator"},"+"),e(" addAmount"),t("span",{class:"token punctuation"},";"),e("\n\n    "),t("span",{class:"token keyword"},"if"),e(),t("span",{class:"token punctuation"},"("),e("newValue "),t("span",{class:"token operator"},">="),e(" maximumValue"),t("span",{class:"token punctuation"},")"),e(),t("span",{class:"token punctuation"},"{"),e("\n      "),t("span",{class:"token comment"},"// This mutation will never be called again"),e("\n      mutation"),t("span",{class:"token operator"},"?."),t("span",{class:"token function"},"complete"),t("span",{class:"token punctuation"},"("),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},";"),e("\n    "),t("span",{class:"token punctuation"},"}"),e("\n\n    "),t("span",{class:"token keyword"},"return"),e(),t("span",{class:"token punctuation"},"{"),e(" count"),t("span",{class:"token operator"},":"),e(" newValue "),t("span",{class:"token punctuation"},"}"),t("span",{class:"token punctuation"},";"),e("\n  "),t("span",{class:"token punctuation"},"}"),e("\n"),t("span",{class:"token punctuation"},"}"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},"."),t("span",{class:"token function"},"subscribe"),t("span",{class:"token punctuation"},"("),t("span",{class:"token punctuation"},"{"),e("\n  "),t("span",{class:"token function-variable function"},"error"),t("span",{class:"token operator"},":"),e(" errorText "),t("span",{class:"token operator"},"=>"),e(),t("span",{class:"token punctuation"},"{"),e("\n    "),t("span",{class:"token builtin"},"console"),t("span",{class:"token punctuation"},"."),t("span",{class:"token function"},"error"),t("span",{class:"token punctuation"},"("),t("span",{class:"token string"},"'Oh no, an error:'"),t("span",{class:"token punctuation"},","),e(" errorText"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},";"),e("\n  "),t("span",{class:"token punctuation"},"}"),t("span",{class:"token punctuation"},","),e("\n  "),t("span",{class:"token function-variable function"},"complete"),t("span",{class:"token operator"},":"),e(),t("span",{class:"token punctuation"},"("),t("span",{class:"token punctuation"},")"),e(),t("span",{class:"token operator"},"=>"),e(),t("span",{class:"token punctuation"},"{"),e("\n    "),t("span",{class:"token builtin"},"console"),t("span",{class:"token punctuation"},"."),t("span",{class:"token function"},"log"),t("span",{class:"token punctuation"},"("),t("span",{class:"token string"},"'Counter stopped at '"),t("span",{class:"token punctuation"},","),e(" state"),t("span",{class:"token punctuation"},"."),e("count"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},";"),e("\n  "),t("span",{class:"token punctuation"},"}"),e("\n"),t("span",{class:"token punctuation"},"}"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},";"),e("\n\nactions"),t("span",{class:"token punctuation"},"."),t("span",{class:"token function"},"add"),t("span",{class:"token punctuation"},"("),t("span",{class:"token number"},"9"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},";"),e("\n\n"),t("span",{class:"token comment"},"// 50%"),e("\n"),t("span",{class:"token keyword"},"if"),e(),t("span",{class:"token punctuation"},"("),e("Math"),t("span",{class:"token punctuation"},"."),t("span",{class:"token function"},"random"),t("span",{class:"token punctuation"},"("),t("span",{class:"token punctuation"},")"),e(),t("span",{class:"token operator"},">"),e(),t("span",{class:"token number"},"0.5"),t("span",{class:"token punctuation"},")"),e(),t("span",{class:"token punctuation"},"{"),e("\n  actions"),t("span",{class:"token punctuation"},"."),t("span",{class:"token function"},"add"),t("span",{class:"token punctuation"},"("),t("span",{class:"token operator"},"-"),t("span",{class:"token number"},"1"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},";"),e("\n  "),t("span",{class:"token comment"},"//> Oh no, an error: add amount cannot be negative!"),e("\n"),t("span",{class:"token punctuation"},"}"),e(),t("span",{class:"token keyword"},"else"),e(),t("span",{class:"token punctuation"},"{"),e("\n  actions"),t("span",{class:"token punctuation"},"."),t("span",{class:"token function"},"add"),t("span",{class:"token punctuation"},"("),t("span",{class:"token number"},"1"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},";"),e("\n  "),t("span",{class:"token comment"},"//> Counter stopped at 10"),e("\n"),t("span",{class:"token punctuation"},"}"),e("\n")])])],-1),H=t("h4",{id:"parameter-2-map"},[t("a",{class:"header-anchor",href:"#parameter-2-map","aria-hidden":"true"},"#"),e(" Parameter 2: "),t("code",null,"map$")],-1),Q=t("p",null,[e("It's also possible to modify the resulting observable using the second parameter, "),t("code",null,"map$"),e("."),t("br"),e(" It accepts:")],-1),Y=t("ul",null,[t("li",null,[t("code",null,"state$"),e(" - the resulting observable (fired on each action)")]),t("li",null,[t("code",null,"reducers"),e(" - a map of raw reducers (basically, the first parameter itself)")]),t("li",null,[t("code",null,"state"),e(" - current reactive state")]),t("li",null,[t("code",null,"actions$"),e(" - a map of all observables that are fired on action calls")]),t("li",null,[t("code",null,"context"),e(" - a current mutation context, same as the one in the reducers,"),t("br"),e(" can be passed into the reducers to allow them to control the mutation too")])],-1),Z=t("div",{class:"language-ts"},[t("pre",null,[t("code",null,[t("span",{class:"token function"},"useRxState"),t("span",{class:"token punctuation"},"("),e("state"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},"("),e("\n  reducers"),t("span",{class:"token punctuation"},","),e("\n  "),t("span",{class:"token comment"},"// add this parameter to any useRxState call to try"),e("\n  "),t("span",{class:"token punctuation"},"("),e("state$"),t("span",{class:"token punctuation"},","),e(" reducers"),t("span",{class:"token punctuation"},","),e(" state"),t("span",{class:"token punctuation"},","),e(" actions$"),t("span",{class:"token punctuation"},","),e(" context"),t("span",{class:"token punctuation"},")"),e(),t("span",{class:"token operator"},"=>"),e(),t("span",{class:"token punctuation"},"{"),e("\n    "),t("span",{class:"token builtin"},"console"),t("span",{class:"token punctuation"},"."),t("span",{class:"token function"},"log"),t("span",{class:"token punctuation"},"("),t("span",{class:"token string"},"'This is logged only once'"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},";"),e("\n    "),t("span",{class:"token builtin"},"console"),t("span",{class:"token punctuation"},"."),t("span",{class:"token function"},"log"),t("span",{class:"token punctuation"},"("),t("span",{class:"token string"},"'These are all reducers defined above, unchanged:'"),t("span",{class:"token punctuation"},","),e(" reducers"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},";"),e("\n    "),t("span",{class:"token builtin"},"console"),t("span",{class:"token punctuation"},"."),t("span",{class:"token function"},"log"),t("span",{class:"token punctuation"},"("),t("span",{class:"token string"},"'This is an initial reactive state:'"),t("span",{class:"token punctuation"},","),e(" state"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},";"),e("\n    "),t("span",{class:"token builtin"},"console"),t("span",{class:"token punctuation"},"."),t("span",{class:"token function"},"log"),t("span",{class:"token punctuation"},"("),t("span",{class:"token string"},"'This is a map of all actions to their secific observables:'"),t("span",{class:"token punctuation"},","),e(" actions$"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},";"),e("\n    "),t("span",{class:"token builtin"},"console"),t("span",{class:"token punctuation"},"."),t("span",{class:"token function"},"log"),t("span",{class:"token punctuation"},"("),t("span",{class:"token string"},"'This context can be used to create an error or to complete the observable:'"),t("span",{class:"token punctuation"},","),e(" context"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},";"),e("\n\n    "),t("span",{class:"token comment"},"// By the way, state$ is just merged actions$,"),e("\n    "),t("span",{class:"token comment"},"// so this"),e("\n    "),t("span",{class:"token keyword"},"return"),e(" state$"),t("span",{class:"token punctuation"},"."),t("span",{class:"token function"},"pipe"),t("span",{class:"token punctuation"},"("),t("span",{class:"token function"},"tap"),t("span",{class:"token punctuation"},"("),e("state "),t("span",{class:"token operator"},"=>"),e(),t("span",{class:"token builtin"},"console"),t("span",{class:"token punctuation"},"."),t("span",{class:"token function"},"log"),t("span",{class:"token punctuation"},"("),t("span",{class:"token string"},"'this is logged on each action'"),t("span",{class:"token punctuation"},","),e(" state"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},";"),e("\n    "),t("span",{class:"token comment"},"// and this"),e("\n    "),t("span",{class:"token keyword"},"return"),e(),t("span",{class:"token function"},"merge"),t("span",{class:"token punctuation"},"("),t("span",{class:"token operator"},"..."),e("Object"),t("span",{class:"token punctuation"},"."),t("span",{class:"token function"},"values"),t("span",{class:"token punctuation"},"("),e("actions$"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},"."),t("span",{class:"token function"},"pipe"),t("span",{class:"token punctuation"},"("),t("span",{class:"token function"},"tap"),t("span",{class:"token punctuation"},"("),e("state "),t("span",{class:"token operator"},"=>"),e(),t("span",{class:"token builtin"},"console"),t("span",{class:"token punctuation"},"."),t("span",{class:"token function"},"log"),t("span",{class:"token punctuation"},"("),t("span",{class:"token string"},"'this is logged on each action'"),t("span",{class:"token punctuation"},","),e(" state"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},";"),e("\n    "),t("span",{class:"token comment"},"// are identical"),e("\n  "),t("span",{class:"token punctuation"},"}"),e("\n"),t("span",{class:"token punctuation"},")"),e("\n")])])],-1),nn=t("h4",{id:"returned-value"},[t("a",{class:"header-anchor",href:"#returned-value","aria-hidden":"true"},"#"),e(" Returned value")],-1),sn=t("p",null,"The function then returns a pretty complex object, with the first three properties being the main ones:",-1),an=t("ul",null,[t("li",null,[t("code",null,"state"),e(" - a plain Vue reactive state, mutable.")]),t("li",null,[t("code",null,"actions"),e(" - transformed reducers, they accept the defined parameters, but mutate the state, instead of just returning its parts.")]),t("li",null,[t("code",null,"state$"),e(" - an observable that emits a new state each time there's an update.")]),t("li",null,[t("code",null,"actions$"),e(" - a map of individual observables per each action, useful for tracking individual action calls.")]),t("li",null,[t("code",null,"subscribe"),e(" - a shorthand for calling "),t("code",null,"subscribe"),e(" on the "),t("code",null,"state$"),e(", returns the same object with rxjs "),t("a",{href:"https://rxjs-dev.firebaseapp.com/guide/subscription",target:"_blank",rel:"noopener noreferrer"},[t("code",null,"Subscription")]),e(" mixed-in.")])],-1),tn=t("h2",{id:"basic-example"},[t("a",{class:"header-anchor",href:"#basic-example","aria-hidden":"true"},"#"),e(),t("a",{href:"https://github.com/Raiondesu/vuse-rx/blob/main/docs/.vitepress/theme/recipes/counter.vue",target:"_blank",rel:"noopener noreferrer"},"Basic example")],-1),on=t("div",{class:"language-js"},[t("pre",null,[t("code",null,[t("span",{class:"token keyword"},"const"),e(),t("span",{class:"token punctuation"},"{"),e("\n  actions"),t("span",{class:"token operator"},":"),e(),t("span",{class:"token punctuation"},"{"),e("\n    increment"),t("span",{class:"token punctuation"},","),e("\n    setCount\n  "),t("span",{class:"token punctuation"},"}"),t("span",{class:"token punctuation"},","),e("\n  state"),t("span",{class:"token punctuation"},","),e("\n  state$ "),t("span",{class:"token comment"},"// state observable"),e("\n"),t("span",{class:"token punctuation"},"}"),e(),t("span",{class:"token operator"},"="),e(),t("span",{class:"token function"},"useRxState"),t("span",{class:"token punctuation"},"("),t("span",{class:"token punctuation"},"{"),e(" count"),t("span",{class:"token operator"},":"),e(),t("span",{class:"token number"},"0"),e(),t("span",{class:"token punctuation"},"}"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},"("),t("span",{class:"token punctuation"},"{"),e("\n  "),t("span",{class:"token comment"},"// stateful reducer"),e("\n  "),t("span",{class:"token function-variable function"},"increment"),t("span",{class:"token operator"},":"),e(),t("span",{class:"token punctuation"},"("),t("span",{class:"token punctuation"},")"),e(),t("span",{class:"token operator"},"=>"),e(),t("span",{class:"token parameter"},"state"),e(),t("span",{class:"token operator"},"=>"),e(),t("span",{class:"token punctuation"},"("),t("span",{class:"token punctuation"},"{"),e("\n    "),t("span",{class:"token comment"},"// automatic type inference for the state"),e("\n    count"),t("span",{class:"token operator"},":"),e(" state"),t("span",{class:"token punctuation"},"."),e("count "),t("span",{class:"token operator"},"+"),e(),t("span",{class:"token number"},"1"),e("\n  "),t("span",{class:"token punctuation"},"}"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},","),e("\n\n  "),t("span",{class:"token comment"},"// stateless reducer"),e("\n  "),t("span",{class:"token function-variable function"},"setCount"),t("span",{class:"token operator"},":"),e(),t("span",{class:"token punctuation"},"("),t("span",{class:"token parameter"},[e("count"),t("span",{class:"token operator"},":"),e(" string")]),t("span",{class:"token punctuation"},")"),e(),t("span",{class:"token operator"},"=>"),e(),t("span",{class:"token punctuation"},"("),t("span",{class:"token punctuation"},"{"),e("\n    "),t("span",{class:"token comment"},"// custom business logic"),e("\n    count"),t("span",{class:"token operator"},":"),e(),t("span",{class:"token function"},"isNaN"),t("span",{class:"token punctuation"},"("),t("span",{class:"token function"},"Number"),t("span",{class:"token punctuation"},"("),e("count"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},")"),e(),t("span",{class:"token operator"},"?"),e(),t("span",{class:"token number"},"0"),e(),t("span",{class:"token operator"},":"),e(),t("span",{class:"token function"},"Number"),t("span",{class:"token punctuation"},"("),e("count"),t("span",{class:"token punctuation"},")"),e("\n  "),t("span",{class:"token punctuation"},"}"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},","),e("\n"),t("span",{class:"token punctuation"},"}"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},";"),e("\n\n"),t("span",{class:"token comment"},'// "Activating" the actions'),e("\nstate$"),t("span",{class:"token punctuation"},"."),t("span",{class:"token function"},"subscribe"),t("span",{class:"token punctuation"},"("),t("span",{class:"token parameter"},"state"),e(),t("span",{class:"token operator"},"=>"),e(" console"),t("span",{class:"token punctuation"},"."),t("span",{class:"token function"},"log"),t("span",{class:"token punctuation"},"("),t("span",{class:"token string"},"'counter: '"),t("span",{class:"token punctuation"},","),e(" state"),t("span",{class:"token punctuation"},"."),e("count"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},";"),e("\n\n"),t("span",{class:"token comment"},"// One-way data binding from reactive state (with type convertation)"),e("\n"),t("span",{class:"token keyword"},"const"),e(" countRef "),t("span",{class:"token operator"},"="),e(),t("span",{class:"token function"},"syncRef"),t("span",{class:"token punctuation"},"("),e("state"),t("span",{class:"token punctuation"},","),e(),t("span",{class:"token string"},"'count'"),t("span",{class:"token punctuation"},","),e(" String"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},","),e("\n")])])],-1),en=t("div",{class:"language-vue"},[t("pre",null,[t("code",null,[t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),e("template")]),t("span",{class:"token punctuation"},">")]),e("\n  "),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),e("button")]),e(),t("span",{class:"token attr-name"},"@click"),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),e("increment"),t("span",{class:"token punctuation"},'"')]),t("span",{class:"token punctuation"},">")]),e("increment to {{ state.count + 1 }}"),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"</"),e("button")]),t("span",{class:"token punctuation"},">")]),e("\n  "),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),e("br")]),t("span",{class:"token punctuation"},">")]),e("\n  "),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),e("input")]),e(),t("span",{class:"token attr-name"},"v-model"),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),e("countRef"),t("span",{class:"token punctuation"},'"')]),t("span",{class:"token punctuation"},"/>")]),e("\n  "),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),e("button")]),e(),t("span",{class:"token attr-name"},"@click"),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),e("setCount(countRef)"),t("span",{class:"token punctuation"},'"')]),t("span",{class:"token punctuation"},">")]),e("set count to {{ countRef }}"),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"</"),e("button")]),t("span",{class:"token punctuation"},">")]),e("\n"),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"</"),e("template")]),t("span",{class:"token punctuation"},">")]),e("\n")])])],-1);p.render=function(e,c,p,cn,pn,ln){const un=n("CounterDemo"),rn=n("ClientOnly");return s(),a("div",null,[l,u,i,r,k,d,m,h,f,b,g,v,y,w,x,R,S,$,O,A,T,j,_,V,C,I,D,M,P,L,N,q,B,F,E,K,z,J,U,W,X,G,H,Q,Y,Z,nn,sn,an,tn,t(rn,null,{default:o((()=>[t(un,{simple:""})])),_:1}),on,en])};export default p;export{c as __pageData};
