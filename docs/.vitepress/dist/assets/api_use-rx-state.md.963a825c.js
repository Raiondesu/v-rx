import{r as n,o as a,c as s,b as t,w as e,a as p}from"./app.b3641559.js";const o='{"title":"useRxState","description":"","frontmatter":{},"headers":[{"level":2,"title":"","slug":""},{"level":2,"title":"Type Signature and overloads","slug":"type-signature-and-overloads"},{"level":2,"title":"Basic example","slug":"basic-example"}],"relativePath":"api/use-rx-state.md","lastUpdated":1613848400771}',c={},u=p('<h1 id="userxstate">useRxState</h1><blockquote><p>Allows to bind reducers to a reactive state and an observable.</p></blockquote><p><div class="table-of-contents"><ul><li><a href="#userxstate">useRxState</a><ul><li><a href="#"></a></li><li><a href="#type-signature-and-overloads">Type Signature and overloads</a></li><li><a href="#basic-example-https-github-com-raiondesu-vuse-rx-blob-main-docs-vitepress-theme-recipies-counter-vue">Basic example</a></li></ul></li></ul></div></p><h2 id=""></h2><h2 id="type-signature-and-overloads">Type Signature and overloads</h2><h2 id="basic-example"><a href="https://github.com/Raiondesu/vuse-rx/blob/main/docs/.vitepress/theme/recipies/counter.vue" target="_blank" rel="noopener noreferrer">Basic example</a></h2><div class="language-js"><pre><code><span class="token keyword">const</span> <span class="token punctuation">{</span>\n  handlers<span class="token operator">:</span> <span class="token punctuation">{</span>\n    increment\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  state<span class="token punctuation">,</span>\n  state$\n<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useRxState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> count<span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token function-variable function">increment</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token parameter">state</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> count<span class="token operator">:</span> state<span class="token punctuation">.</span>count <span class="token operator">+</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nstate$<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token parameter">state</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;counter: &#39;</span><span class="token punctuation">,</span> state<span class="token punctuation">.</span>count<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>increment<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>increment {{ state.count }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div>',8);c.render=function(p,o,c,l,i,r){const k=n("CounterDemo"),d=n("ClientOnly");return a(),s("div",null,[u,t(d,null,{default:e((()=>[t(k)])),_:1})])};export default c;export{o as __pageData};
